import type { Metadata } from "next";
import Script from "next/script";
import localFont from "next/font/local";
import { Playpen_Sans_Arabic } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";
import LinedBackground from "@/components/ui/LinedBackground";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";

const ObjectSans = localFont({
  src: [
    {
      path: './fonts/ObjectSans.woff2',
      weight: '400',
      style: 'normal',
    },
    {
      path: './fonts/ObjectSans-Heavy.woff2',
      weight: '600',
      style: 'normal',
    },
  ],
  display: 'swap',
  preload: true
});

const playpenSansArabic = Playpen_Sans_Arabic({
  subsets: ["arabic"],
  weight: ["400", "500", "600", "700", "800"],
  variable: "--font-playpenSansArabic",
  display: "swap",
});

export const metadata: Metadata = {
  title: "Bishoy Morgan | Freelance Web Developer",
  description: "Generated by Morgan",
};

const locales = ['en', 'es', 'ar'];

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  // Await the params promise
  const { locale } = await params;
  
  // Validate locale
  if (!locales.includes(locale)) {
    notFound();
  }

  const messages = await getMessages({ locale });

  return (
    <html lang={locale}>
      {/* <head>
        {process.env.NEXT_PUBLIC_GA_ID && (
          <>
            <Script
              src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_GA_ID}`}
              strategy="afterInteractive"
            />
            <Script id="ga-init" strategy="afterInteractive">
              {`
                window.dataLayer = window.dataLayer || [];
                function gtag(){dataLayer.push(arguments);}
                gtag('js', new Date());
                gtag('config', '${process.env.NEXT_PUBLIC_GA_ID}');
              `}
            </Script>
          </>
        )}
      </head> */}
      <body 
        dir={locale === "ar" ? "rtl" : "ltr"}
        className={
          locale === "ar"
            ? `${playpenSansArabic.className}`
            : `${ObjectSans.className} antialiased`
        }
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <LinedBackground />
          <Navbar />
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}